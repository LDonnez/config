- name: Install vim & neovim with homebrew
  homebrew: name={{ item }} state=present
  loop:
    - neovim
    - vim
  tags:
    - vim

- name: Create ~/.config/nvim directory if not exists
  file: path=~/.config/nvim state=directory recurse=yes
  tags:
    - vim

- name: Create ~/.vim directory if not exists
  file: path=~/.vim state=directory recurse=yes
  tags:
    - vim

- name: Create ~/.vim/backup directory if not exists
  file: path=~/.vim/backup state=directory recurse=yes
  tags:
    - vim

- name: Create ~/.vim/undo directory if not exists
  file: path=~/.vim/undo state=directory recurse=yes
  tags:
    - vim

- name: Create ~/.vim/swap directory if not exists
  file: path=~/.vim/swap state=directory recurse=yes
  tags:
    - vim

- name: Symlink ~/.vimrc from source {{ dotfiles_directory_path }}/.vimrc
  file: src={{ item.src }} dest={{ item.dest }} state=link
  loop:
    - { src: "{{ dotfiles_directory_path }}/.vimrc", dest: "~/.vimrc" }
  tags:
    - vim

- name: Symlink ~/.config/nvim/lua from source {{ dotfiles_directory_path }}/nvim/lua
  file: src={{ item.src }} dest={{ item.dest }} state=link
  loop:
    - { src: "{{ dotfiles_directory_path }}/.config/nvim/lua", dest: "~/.config/nvim/lua" }
  tags:
    - vim

- name: Symlink ~/.vim/lua from source {{ dotfiles_directory_path }}/.nvim/lua
  file: src={{ item.src }} dest={{ item.dest }} state=link
  loop:
    - { src: "{{ dotfiles_directory_path }}/.config/nvim/lua", dest: "~/.vim/lua" }
  tags:
    - vim

- name: Symlink ~/.vim/coc-settings.json from source {{ dotfiles_directory_path }}/coc-settings.json
  file: src={{ item.src }} dest={{ item.dest }} state=link
  loop:
    - { src: "{{ dotfiles_directory_path }}/.config/nvim/coc-settings.json", dest: "~/.vim/coc-settings.json" }
  tags:
    - vim

- name: Symlink ~/.config/nvim/coc-settings.json from source {{ dotfiles_directory_path }}/coc-settings.json
  file: src={{ item.src }} dest={{ item.dest }} state=link
  loop:
      - { src: "{{ dotfiles_directory_path }}/.config/nvim/coc-settings.json", dest: "~/.config/nvim/coc-settings.json" }
  tags:
    - vim

- name: Configure neovim
  copy: content="set runtimepath^=~/.vim runtimepath+=~/.vim/after\n let &packpath = &runtimepath\n source ~/.vimrc" dest=~/.config/nvim/init.vim
  tags:
    - vim

- pip:
    name: neovim
  tags:
    - vim

- pip:
    name: neovim
    executable: pip3
  tags:
    - vim

- pip:
    name: pynvim
  tags:
    - vim

- pip:
    name: pynvim
    executable: pip3
  tags:
    - vim

- name: Install neovim npm package globally
  npm:
    name: neovim
    global: yes
  tags:
    - vim

- name: Install neovim gem
  become_user: lenny
  gem: name="neovim" state=latest
  tags:
    - vim

- name: Install language servers & linters with npm
  npm: name={{ item }} global=yes
  loop:
    - "typescript"
    - "typescript-language-server"
    - "vscode-langservers-extracted"
    - "eslint_d"
  tags:
    - vim

- name: Install language servers with homebrew
  homebrew: name={{ item }} state=present
  loop:
    - "efm-langserver"
  tags:
    - vim
